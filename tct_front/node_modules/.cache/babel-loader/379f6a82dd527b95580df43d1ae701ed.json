{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adzg6\\\\Desktop\\\\sw\\\\tct\\\\src\\\\component\\\\Output\\\\MagicGridPage.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport MagicGridEngine from \"magic-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MagicGridPage() {\n  var _s = $RefreshSig$();\n  const MagicGrid = _ref => {\n    _s();\n    let {\n      children,\n      ...props\n    } = _ref;\n    // useRef를 사용하여 children 을 제어 및 생성\n    // 즉, children 에 해당하는 객체를 매직 그리드처럼 제어한다.\n    const container = useRef();\n    const timeout = useRef();\n    const grid = useRef();\n\n    // 초기화 시간 조정\n    // 초기값 200\n    // 1000 = 1초\n    const onResize = () => {\n      if (!timeout.current) timeout.current = setTimeout(handleReposition, 200);\n    };\n\n    //재배치 (초기화 선언)\n    const handleReposition = () => {\n      grid.current && grid.current.positionItems();\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    };\n\n    // 매직 그리드 제어\n    useEffect(() => {\n      if (!grid.current) {\n        grid.current = new MagicGridEngine({\n          container: container.current,\n          items: 20,\n          animate: true,\n          center: true,\n          static: true,\n          ...props\n        });\n        window.addEventListener(\"resize\", onResize);\n      }\n      handleReposition();\n\n      // 초기화\n      return () => {\n        clearTimeout(timeout.current);\n        window.removeEventListener(\"resize\", onResize);\n        grid.current = null;\n      };\n    });\n\n    // 객체 생성 및 초기화\n    useEffect(() => {\n      handleReposition();\n    });\n\n    //container\n    // 위 선언을 걸쳐서 매직 그리드 엘리먼트 생성\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: container,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  };\n  _s(MagicGrid, \"Ytg7ossereq+0fnoV90D4Y6dy8Q=\");\n  let ran = \"#\" + Math.floor(Math.random() * 1000000);\n  let colors = [\"rgb(255,205,0)\", \"blue\", \"red\", \"rgb(255, 255, 0)\", \"#123456\", ran];\n\n  //Card\n  // 선언한 card 엘리먼트 전부 태그 값으로 출력하는 곳\n  const Card = () => {\n    const result = [];\n    for (const color of colors) {\n      result.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Card\",\n        style: {\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this));\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: /*#__PURE__*/_jsxDEV(MagicGrid, {\n        static: true,\n        gutter: 12,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_c = MagicGridPage;\nexport default MagicGridPage;\nvar _c;\n$RefreshReg$(_c, \"MagicGridPage\");","map":{"version":3,"names":["React","useRef","useEffect","MagicGridEngine","MagicGridPage","MagicGrid","children","props","container","timeout","grid","onResize","current","setTimeout","handleReposition","positionItems","clearTimeout","items","animate","center","static","window","addEventListener","removeEventListener","ran","Math","floor","random","colors","Card","result","color","push","backgroundColor"],"sources":["C:/Users/adzg6/Desktop/sw/tct/src/component/Output/MagicGridPage.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nimport MagicGridEngine from \"magic-grid\";\r\n\r\nfunction MagicGridPage() {\r\n    const MagicGrid = ({ children, ...props }) => {\r\n      // useRef를 사용하여 children 을 제어 및 생성\r\n      // 즉, children 에 해당하는 객체를 매직 그리드처럼 제어한다.\r\n        const container = useRef();\r\n        const timeout = useRef();\r\n        const grid = useRef();\r\n      \r\n        // 초기화 시간 조정\r\n        // 초기값 200\r\n        // 1000 = 1초\r\n        const onResize = () => {\r\n          if (!timeout.current) timeout.current = setTimeout(handleReposition, 200);\r\n        };\r\n      \r\n        //재배치 (초기화 선언)\r\n        const handleReposition = () => {\r\n          grid.current && grid.current.positionItems();\r\n          clearTimeout(timeout.current);\r\n          timeout.current = null;\r\n        };\r\n      \r\n        // 매직 그리드 제어\r\n        useEffect(() => {\r\n          if (!grid.current) {\r\n            grid.current = new MagicGridEngine({\r\n              container: container.current,\r\n              items: 20,\r\n              animate: true,\r\n              center: true,\r\n              static:true,\r\n              ...props\r\n            });\r\n            window.addEventListener(\"resize\", onResize);\r\n          }\r\n          handleReposition();\r\n      \r\n          // 초기화\r\n          return () => {\r\n            clearTimeout(timeout.current);\r\n            window.removeEventListener(\"resize\", onResize);\r\n            grid.current = null;\r\n          };\r\n        });\r\n        \r\n        // 객체 생성 및 초기화\r\n        useEffect(() => {\r\n          handleReposition();\r\n        });\r\n\r\n        //container\r\n        // 위 선언을 걸쳐서 매직 그리드 엘리먼트 생성\r\n        return <div ref={container}>{children}</div>;\r\n      };\r\n\r\n      let ran = \"#\" + Math.floor(Math.random() * 1000000)\r\n\r\n      let colors = [\"rgb(255,205,0)\", \"blue\", \"red\", \"rgb(255, 255, 0)\", \"#123456\", ran]\r\n\r\n      //Card\r\n      // 선언한 card 엘리먼트 전부 태그 값으로 출력하는 곳\r\n      const Card = () => {\r\n        const result = []\r\n        for (const color of colors) {\r\n          result.push(<div id=\"Card\" style={{backgroundColor: color}}></div>);\r\n        }\r\n        return result\r\n      };\r\n\r\n    return (\r\n        <div id=\"container\">\r\n            <div id=\"container\">\r\n                <MagicGrid static gutter={12}> {/*엘리먼트 간격*/}\r\n                    {/*children*/}\r\n                    <Card />\r\n                </MagicGrid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MagicGridPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}